on:
  push:
    branches:
      - master

name: CI/CD

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run the dependant services
      run: docker-compose up -d
    - name: Test the app inside the container
      env:
        IMAGE_TAG: bside
        MIX_ENV: test
        CMD_BUILD: cd /app/bside-api && mix deps.get && mix test
      run: |
        docker build -t $IMAGE_TAG .
        docker run --rm -t --network=bside-net -v $(pwd):/app/bside-api $IMAGE_TAG /bin/bash -l -c "$CMD_BUILD"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build the artifacts
      env:
        IMAGE_TAG: bside
        CMD_BUILD: cd /tmp && tar -czvf bside-api.tar.gz /app/bside-api
      run: |
        docker build -f Dockerfile.prod -t $IMAGE_TAG .
        docker run --rm -t -v $(pwd)/tmp:/tmp $IMAGE_TAG /bin/bash -l -c "$CMD_BUILD"
    - name: Copy artifacts to the server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRE_SSH_HOST }}
        username: ${{ secrets.PRE_SSH_USER }}
        key: ${{ secrets.PRE_SSH_KEY }}
        port: ${{ secrets.PRE_SSH_PORT }}
        source: "tmp/bside-api.tar.gz"
        target: "/"
    - name: Install the latest code
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRE_SSH_HOST }}
        username: ${{ secrets.PRE_SSH_USER }}
        key: ${{ secrets.PRE_SSH_KEY }}
        port: ${{ secrets.PRE_SSH_PORT }}
        script: |
          /app/bside-api/bin/bside stop || true
          sudo rm -rf /app/bside-api
          sudo tar -xvf /tmp/bside-api.tar.gz -C /
          sudo chown -hR centos:centos /app/bside-api/
          /app/bside-api/bin/bside daemon
          sleep 10
          curl -v localhost:4000/status --fail
